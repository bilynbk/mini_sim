<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from mini.urdf.xacro                | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="mini" xmlns:xacro="http://ros.org/wiki/xacro">
  <material name="black">
    <color rgba="0.0 0.0 0.0 1"/>
  </material>
  <material name="silver">
    <color rgba="0.75 0.75 0.75 1"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1"/>
  </material>
  <material name="yellow">
    <color rgba="1.0 1.0 0.0 1"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.65 0.0 1"/>
  </material>
  <!-- Mini Kobuki -->
  <!-- Define a number of dimensions using properties -->
  <!-- Define the torso -->
  <!--*origin shows it is a block parameter -->
  <!-- Define a number of dimensions using properties -->
  <!-- <property name="torso_upper_offset_z" value="0.4" /> -->
  <!-- Define the torso -->
  <!-- <property name="mesh_scale" value="0.0095" /> -->
  <!-- Define the torso -->
  <!-- Define a number of dimensions using properties -->
  <!-- Define the torso -->
  <!-- Define a number of dimensions using properties -->
  <!-- Define the torso -->
  <!-- Define a number of dimensions using properties -->
  <!-- Define the torso -->
  <!-- Define a number of dimensions using properties -->
  <!-- Define the torso -->
  <!-- A box-and-cylinder model of the Hokuyo URG-30LX laser scanner -->
  <!-- Define the laser macro -->
  <!--<xacro:include filename="$(find mini_description)/urdf/hokuyo_utm30lx.urdf.xacro" /> -->
  <material name="Red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <!-- Mini Kobuki base  -->
  <link name="base_footprint"/>
  <!--
       Base link is set at the bottom of the base mould.
       This is done to be compatible with the way base link
       was configured for turtlebot 1. Refer to
       
       https://github.com/turtlebot/turtlebot/issues/40
       
       To put the base link at the more oft used wheel
       axis, set the z-distance from the base_footprint
       to 0.352.
      -->
  <joint name="base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0102"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <link name="base_link">
    <visual>
      <geometry>
        <!-- new mesh -->
        <!--  <mesh filename="package://mini_description/meshes/main_body.dae" /> -->
        <mesh filename="package://mini_description/meshes/base_mini.dae" scale="0.01 0.01 0.01"/>
      </geometry>
      <!-- <origin xyz="0.001 0 0.05199" rpy="0 0 0"/> -->
      <origin rpy="0 0 1.57079632679" xyz="-0.07 -0.14  -0.03"/>
      <!-- <material name="yellow"/>  -->
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.10938" radius="0.178"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0.0 0 0.05949"/>
    </collision>
    <inertial>
      <!-- COM experimentally determined -->
      <origin xyz="0.01 0 0"/>
      <mass value="2.4"/>
      <!-- 2.4/2.6 kg for small/big battery pack -->
      <!-- Kobuki's inertia tensor is approximated by a cylinder with homogeneous mass distribution
             More details: http://en.wikipedia.org/wiki/List_of_moment_of_inertia_tensors
             m = 2.4 kg; h = 0.09 m; r = 0.175 m
             ixx = 1/12 * m * (3 * r^2 + h^2)
             iyy = 1/12 * m * (3 * r^2 + h^2)
             izz = 1/2 * m * r^2 
          -->
      <inertia ixx="0.019995" ixy="0.0" ixz="0.0" iyy="0.019995" iyz="0.0" izz="0.03675"/>
    </inertial>
  </link>
  <joint name="wheel_left_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_left_link"/>
    <origin rpy="-1.57079632679 0 0" xyz="0.00 0.115 0.0250"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="wheel_left_link">
    <visual>
      <geometry>
        <mesh filename="package://mini_description/meshes/wheel.dae"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.0206" radius="0.0352"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="wheel_right_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_right_link"/>
    <origin rpy="-1.57079632679 0 0" xyz="0.00 -0.115 0.0250"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="wheel_right_link">
    <visual>
      <geometry>
        <mesh filename="package://mini_description/meshes/wheel.dae"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.0206" radius="0.0350"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="caster_front_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_front_link"/>
    <origin rpy="-1.57079632679 0 0" xyz="0.115 0.0 0.007"/>
  </joint>
  <link name="caster_front_link">
    <collision>
      <geometry>
        <cylinder length="0.0176" radius="0.017"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="caster_back_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_back_link"/>
    <origin rpy="-1.57079632679 0 0" xyz="-0.135 0.0 0.009"/>
  </joint>
  <link name="caster_back_link">
    <collision>
      <geometry>
        <cylinder length="0.0176" radius="0.017"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <!-- Kobuki's sensors -->
  <joint name="gyro_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0.056 0.062 0.0202"/>
    <parent link="base_link"/>
    <child link="gyro_link"/>
  </joint>
  <link name="gyro_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="cliff_sensor_left_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="0.08734 0.13601 0.0214"/>
    <parent link="base_link"/>
    <child link="cliff_sensor_left_link"/>
  </joint>
  <link name="cliff_sensor_left_link">
    <inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="cliff_sensor_right_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="0.085 -0.13601 0.0214"/>
    <parent link="base_link"/>
    <child link="cliff_sensor_right_link"/>
  </joint>
  <link name="cliff_sensor_right_link">
    <inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="cliff_sensor_front_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="0.156 0.00 0.0214"/>
    <parent link="base_link"/>
    <child link="cliff_sensor_front_link"/>
  </joint>
  <link name="cliff_sensor_front_link">
    <inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <!-- Add the Hokuyo lidar -->
  <joint name="lidar_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.13 0 0.14"/>
    <parent link="base_link"/>
    <child link="lidar_link"/>
  </joint>
  <link name="lidar_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.05"/>
      <geometry>
        <mesh filename="package://mini_description/meshes/lidar.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.07"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <!-- Add the torso lower -->
  <!-- <joint name="${name}_joint" type="fixed"> -->
  <joint name="torso_lower_joint" type="prismatic">
    <!-- insert block parameter named origin -->
    <origin rpy="0 0 0" xyz="0.057 0 0.2"/>
    <axis xyz="0 0 1"/>
    <parent link="base_link"/>
    <child link="torso_lower_link"/>
    <limit effort="100" lower="0" upper="0.4" velocity="1.0"/>
  </joint>
  <link name="torso_lower_link">
    <inertial>
      <mass value="2.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 1.57079632679" xyz="-0.11 -0.135 -0.22"/>
      <!-- -0.05  -0.14 -0.05 -->
      <geometry>
        <mesh filename="package://mini_description/meshes/torso_lower_mini.dae" scale="0.0095 0.0095 0.0095"/>
      </geometry>
      <!-- <material color="yellow"/> -->
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.2"/>
      <geometry>
        <cylinder length="0.5" radius="0.01"/>
      </geometry>
    </collision>
  </link>
  <!-- Add the torso upper -->
  <joint name="torso_upper_joint" type="prismatic">
    <!-- <joint name="${name}_joint" type="revolute"> -->
    <origin rpy="0 0 0" xyz="0 0 0.4"/>
    <!--  <axis xyz="0 0 1"/> -->
    <axis xyz="0 0 1"/>
    <!-- <limit effort="1.0" lower="-2.8" upper="2.8" velocity="1.571"/> -->
    <limit effort="100" lower="0" upper="0.4" velocity="1.0"/>
    <!-- <limit effort="100" lower="0" upper="0.4" velocity="1.0"/> -->
    <!-- <dynamics friction="100" damping="100" /> -->
    <parent link="torso_lower_link"/>
    <child link="torso_upper_link"/>
  </joint>
  <link name="torso_upper_link">
    <inertial>
      <mass value="1.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 1.57079632679" xyz="-0.110 -0.136 -0.62"/>
      <!-- -0.110 -0.136 -0.65 -->
      <geometry>
        <mesh filename="package://mini_description/meshes/torso_upper_mini2.dae" scale="0.0095 0.0095 0.0095"/>
      </geometry>
    </visual>
    <!-- <collision>
        <origin xyz="0 0 -0.1" rpy="0 0 0" /> 
        <geometry>
	  <cylinder length="${torso_length}" radius="${torso_radius}" />
        </geometry>
      </collision>  -->
  </link>
  <!-- Add the head -->
  <joint name="head_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.01 0 0.14"/>
    <axis xyz="0 1 0"/>
    <limit effort="1.0" lower="-2.617" upper="2.617" velocity="1.571"/>
    <parent link="torso_upper_link"/>
    <child link="head_link"/>
  </joint>
  <link name="head_link">
    <inertial>
      <mass value="1.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
    <visual>
      <origin rpy="0.349065850399 0 1.57079632679" xyz="-0.37 -0.136 -0.675"/>
      <geometry>
        <mesh filename="package://mini_description/meshes/head_mini4.dae" scale="0.0095 0.0095 0.0095"/>
      </geometry>
    </visual>
    <!-- <collision>
        <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
	<geometry>
          <cylinder length="${head_length}" radius="${head_radius}" />
        </geometry>
      </collision> -->
  </link>
  <!-- Add the upper arm -->
  <joint name="arm_upper_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.06 0 0.1"/>
    <axis xyz="0 1 0"/>
    <limit effort="1.0" lower="-2.8" upper="2.8" velocity="1.571"/>
    <parent link="torso_upper_link"/>
    <child link="arm_upper_link"/>
  </joint>
  <link name="arm_upper_link">
    <inertial>
      <mass value="0.5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
    <visual>
      <origin rpy="0 1.5271630955 0" xyz="-0.01 0 -0.39"/>
      <geometry>
        <!-- New big arm -->
        <!-- <mesh filename="package://mini_description/meshes/arm_upper_mini.dae" scale="${mesh_scale} ${mesh_scale} ${mesh_scale}" /> -->
        <!-- Old but a simple arm -->
        <mesh filename="package://mini_description/meshes/arm_simple_mini.dae" scale="0.0095 0.0095 0.0095"/>
      </geometry>
      <!-- <material color="yellow"/> -->
    </visual>
    <!-- <collision>
        <origin xyz="0 0 -0.19" rpy="0 0 0" />
        <geometry>
	  <cylinder length="${arm_upper_length}" radius="${arm_upper_radius}" />
        </geometry>
      </collision>  -->
  </link>
  <!-- Add the wrist -->
  <joint name="wrist_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 -0.343"/>
    <axis xyz="0 1 0"/>
    <limit effort="1.0" lower="-2.617" upper="2.617" velocity="1.571"/>
    <parent link="arm_upper_link"/>
    <child link="wrist_link"/>
  </joint>
  <link name="wrist_link">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="-0.011 0.0 -0.044"/>
      <geometry>
        <!-- New big arm -->
        <!-- <mesh filename="package://mini_description/meshes/arm_upper_mini.dae" scale="${mesh_scale} ${mesh_scale} ${mesh_scale}" /> -->
        <!-- Old but a simple arm -->
        <mesh filename="package://mini_description/meshes/wrist_simple_mini.dae" scale="0.0095 0.0095 0.0095"/>
      </geometry>
      <!-- <material color="yellow"/> -->
    </visual>
    <!-- <collision>
      <origin xyz="0.14 -0.16 0.5" rpy="${M_PI/100} 0 0" />
      <geometry>
          <cylinder length="${wrist_length}" radius="${wrist_radius}" />
      </geometry>
    </collision> -->
  </link>
  <!-- Add the right hand -->
  <joint name="hand_right_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 -0.015 -0.05"/>
    <axis xyz="1 0 0"/>
    <limit effort="1.0" lower="-2.617" upper="2.617" velocity="1.571"/>
    <parent link="wrist_link"/>
    <child link="hand_right_link"/>
  </joint>
  <link name="hand_right_link">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
    <visual>
      <!-- <origin xyz="0.137 -0.17 0.332" rpy="0 ${M_PI/2} ${-M_PI/2}" />-->
      <!-- <origin xyz="0.137 -0.17 0.332" rpy="0 ${M_PI/2} ${-M_PI/2}" />-->
      <origin rpy="0 1.57079632679 0" xyz="-0.01 0.015 0.005"/>
      <geometry>
        <!-- New big arm -->
        <!-- <mesh filename="package://mini_description/meshes/arm_upper_mini.dae" scale="${mesh_scale} ${mesh_scale} ${mesh_scale}" /> -->
        <!-- Old but a simple arm -->
        <mesh filename="package://mini_description/meshes/hand_right_simple_mini.dae" scale="0.0095 0.0095 0.0095"/>
      </geometry>
      <!-- <material color="yellow"/> -->
    </visual>
    <!-- <collision>
      <origin xyz="0.14 -0.16 0.5" rpy="${M_PI/100} 0 0" />
      <geometry>
          <cylinder length="${wrist_length}" radius="${wrist_radius}" />
      </geometry>
    </collision> -->
  </link>
  <!-- Add the left hand -->
  <joint name="hand_left_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0.015 -0.05"/>
    <axis xyz="1 0 0"/>
    <limit effort="1.0" lower="-2.617" upper="2.617" velocity="1.571"/>
    <parent link="wrist_link"/>
    <child link="hand_left_link"/>
  </joint>
  <link name="hand_left_link">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="-0.01 -0.015 0.005"/>
      <geometry>
        <!-- New big arm -->
        <!-- <mesh filename="package://mini_description/meshes/arm_upper_mini.dae" scale="${mesh_scale} ${mesh_scale} ${mesh_scale}" /> -->
        <!-- Old but a simple arm -->
        <mesh filename="package://mini_description/meshes/hand_left_simple_mini.dae" scale="0.0095 0.0095 0.0095"/>
      </geometry>
      <!-- <material color="yellow"/> -->
    </visual>
    <!-- <collision>
      <origin xyz="0.14 -0.16 0.5" rpy="${M_PI/100} 0 0" />
      <geometry>
          <cylinder length="${wrist_length}" radius="${wrist_radius}" />
      </geometry>
    </collision> -->
  </link>
  <!-- Kobuki Gazebo simulation details -->
  <gazebo reference="wheel_left_link">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="wheel_right_link">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="caster_front_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="caster_back_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="base_link">
    <mu1>0.3</mu1>
    <mu2>0.3</mu2>
    <sensor name="bumpers" type="contact">
      <always_on>1</always_on>
      <update_rate>50.0</update_rate>
      <visualize>true</visualize>
      <contact>
        <collision>base_footprint_collision_base_link</collision>
      </contact>
    </sensor>
  </gazebo>
  <gazebo reference="cliff_sensor_left_link">
    <sensor name="cliff_sensor_left" type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
          <!--            Can't use vertical rays until this bug is resolved: -->
          <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
          <!-- 	          <vertical> -->
          <!-- 	            <samples>50</samples> -->
          <!-- 	            <resolution>1.0</resolution> -->
          <!-- 	            <min_angle>-0.0436</min_angle>  -2.5 degree -->
          <!-- 	            <max_angle>0.0436</max_angle> 2.5 degree -->
          <!-- 	          </vertical> -->
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>
  <gazebo reference="cliff_sensor_right_link">
    <sensor name="cliff_sensor_right" type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
          <!--            Can't use vertical rays until this bug is resolved: -->
          <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
          <!-- 	          <vertical> -->
          <!-- 	            <samples>50</samples> -->
          <!-- 	            <resolution>1.0</resolution> -->
          <!-- 	            <min_angle>-0.0436</min_angle>  -2.5 degree -->
          <!-- 	            <max_angle>0.0436</max_angle> 2.5 degree -->
          <!-- 	          </vertical> -->
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>
  <gazebo reference="cliff_sensor_front_link">
    <sensor name="cliff_sensor_front" type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
          <!-- 	          Can't use vertical rays until this bug is resolved: -->
          <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
          <!-- 	          <vertical> -->
          <!-- 	            <samples>50</samples> -->
          <!-- 	            <resolution>1.0</resolution> -->
          <!-- 	            <min_angle>-0.0436</min_angle>  -2.5 degree -->
          <!-- 	            <max_angle>0.0436</max_angle> 2.5 degree -->
          <!-- 	          </vertical> -->
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>
  <gazebo reference="gyro_link">
    <sensor name="imu" type="imu">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>false</visualize>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>1.96e-06</stddev>
            <!-- 0.25 x 0.25 (deg/s) -->
            <bias_mean>0.0</bias_mean>
            <bias_stddev>0.0</bias_stddev>
          </rate>
          <accel>
            <!-- not used in the plugin and real robot, hence using tutorial values -->
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_kobuki.so" name="kobuki_controller">
      <publish_tf>1</publish_tf>
      <left_wheel_joint_name>wheel_left_joint</left_wheel_joint_name>
      <right_wheel_joint_name>wheel_right_joint</right_wheel_joint_name>
      <wheel_separation>.230</wheel_separation>
      <wheel_diameter>0.070</wheel_diameter>
      <torque>1.0</torque>
      <velocity_command_timeout>0.6</velocity_command_timeout>
      <cliff_sensor_left_name>cliff_sensor_left</cliff_sensor_left_name>
      <cliff_sensor_center_name>cliff_sensor_front</cliff_sensor_center_name>
      <cliff_sensor_right_name>cliff_sensor_right</cliff_sensor_right_name>
      <cliff_detection_threshold>0.04</cliff_detection_threshold>
      <bumper_name>bumpers</bumper_name>
      <imu_name>imu</imu_name>
    </plugin>
  </gazebo>
  <!-- lidar hokuyo UTM-30LX -->
  <!-- <xacro:property name="M_PI" value="3.1415926535897931" />
    <xacro:property name="update_rate" value="40" />
    <xacro:property name="ray_count" value="1080" />
    <xacro:property name="min_angle" value="-180" />
    <xacro:property name="max_angle" value="180" /> -->
  <gazebo reference="lidar_link">
    <sensor name="lidar" type="ray">
      <always_on>true</always_on>
      <update_rate>40</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>1080</samples>
            <resolution>1</resolution>
            <min_angle>-1.507</min_angle>
            <max_angle>1.507</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.08</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_lidar_controller">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>40</updateRate>
        <topicName>scan</topicName>
        <frameName>base_laser_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- xtion -->
  <gazebo reference="head_link">
    <sensor name="xtoin" type="depth">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.09606677025</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.5</near>
          <far>9</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="$camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>20</updateRate>
        <imageTopicName>camera/rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>camera/rgb/camera_info</cameraInfoTopicName>
        <depthImageTopicName>camera/depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>camera/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>camera/depth/points</pointCloudTopicName>
        <frameName>camera_depth_optical_frame</frameName>
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- ros_control plugin -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/mini</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>
  <transmission name="torso_lower_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="torso_lower_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="torso_lower_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="torso_upper_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="torso_upper_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="torso_upper_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="head_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="head_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="head_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="arm_upper_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="arm_upper_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="arm_upper_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="wrist_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wrist_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="wrist_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="hand_right_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="hand_right_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="hand_right_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="hand_left_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="hand_left_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="hand_left_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>
</robot>

